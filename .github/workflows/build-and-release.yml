name: Build and release

on:
  push:
    branches:
      - master

permissions:
  contents: write

env:
  RELEASE_FILENAME: go-mud-release
  RELEASE_VERSION: ${{ github.ref_name }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-go
      - uses: ./.github/actions/codegen-and-test

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: ./.github/actions/setup-go

      - name: Create bin directory
        run: mkdir -p bin/

      - name: Copy _datafiles to bin/
        run: cp -r _datafiles bin/

      - name: Build windows amd64
        run: env GOOS=windows GOARCH=amd64 go build -v -ldflags "-X main.version=${{ env.RELEASE_VERSION }}" -o bin/go-mud-windows_x64.exe .

      - name: Build darwin/arm64
        run: env GOOS=darwin GOARCH=arm64 go build -v -ldflags "-X main.version=${{ env.RELEASE_VERSION }}" -o bin/go-mud-darwin_arm64 .

      - name: Build darwin/amd64
        run: env GOOS=darwin GOARCH=amd64 go build -v -ldflags "-X main.version=${{ env.RELEASE_VERSION }}" -o bin/go-mud-darwin_x64 .

      - name: Build linux/amd64
        run: env GOOS=linux GOARCH=amd64 go build -v -ldflags "-X main.version=${{ env.RELEASE_VERSION }}" -o bin/go-mud-linux_x64 .

      - name: Build linux/arm5
        run: env GOOS=linux GOARCH=arm GOARM=5 go build -v -ldflags "-X main.version=${{ env.RELEASE_VERSION }}" -o bin/go-mud-linux_arm5 .

      - name: Upload bin
        uses: actions/upload-artifact@v4
        with:
          name: bin-artifact
          path: bin/

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Download builds
        uses: actions/download-artifact@v4
        with:
          name: bin-artifact
          path: bin/

      - name: Set short git commit SHA
        id: vars
        run: |
          echo "COMMIT_SHORT_SHA=$(git rev-parse --short ${{ github.sha }})" >> $GITHUB_ENV

      - name: Archive release
        run: zip -r bin/${{ env.RELEASE_FILENAME }}-${{ env.RELEASE_VERSION }}.zip bin/

      - name: Release with notes
        uses: softprops/action-gh-release@v1
        with:
          files: bin/${{ env.RELEASE_FILENAME }}-${{ env.RELEASE_VERSION }}.zip
          tag_name: ${{ env.RELEASE_VERSION }}
          fail_on_unmatched_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
